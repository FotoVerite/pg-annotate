#!/usr/bin/env node

'use strict';

var realist = require('realist'),
    fs = require('fs'),
    colors = require('colors'),
    read = require('fs').readFileSync,
    join = require('path').join,
    ANNOTATE = require('../index');

var USAGE = read(join(__dirname, '/../usage.txt')).toString();

var options = {
    sql: ['s', 'sql']
};

function annotate(opts, filePath, tableName, database) {
    var dataBaseConf = database || process.env.DATABASE_URL;
    if (!dataBaseConf) {
        console.log(colors.red('database url not set.\nPlease set environment DATABASE_URL or give as argument.'));
        process.exit();
    }
    if (!filePath) {
        return usage();
    }
    fs.exists(filePath, function(exists) {
        if (!exists) {
            console.log(colors.red('File ' + filePath + ' not found'));
            process.exit();
        } else {
            ANNOTATE(opts, filePath, tableName, dataBaseConf);
        }
    });

}

function usage() {
    console.log(USAGE);
    process.exit();
}

function version(app) {
    console.log(require('../package.json').version);
    app.stop();
}

var events = {
    'option help': usage,
    'option version': version
};

realist(annotate, options, events);


process.on('uncaughtException', function(error) {
    console.log('Uncaught exception!'.red);
    console.log(error && error.stack || error);
    process.exit();
});